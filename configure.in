dnl Process this file with autoconf to produce a configure script
AC_INIT(libsrc/minc_private.h)

#------------------------------------------------------------------------
# Look for ranlib
#------------------------------------------------------------------------
AC_PROG_RANLIB

#------------------------------------------------------------------------
# Look for groff or nroff
#------------------------------------------------------------------------
AC_CHECK_PROGS(NROFF, groff nroff, true)
NROFF_FLAGS=-man
if test $NROFF = groff; then NROFF_FLAGS="$NROFF_FLAGS -Tascii"; fi
AC_SUBST(NROFF_FLAGS)

#------------------------------------------------------------------------
# Look for make or gmake
#------------------------------------------------------------------------
AC_CHECK_PROGS(MAKE, make gmake)

#------------------------------------------------------------------------
# Check for an ANSI'ish C compiler, starting with CC (we really just look for
# void's, prototypes and enum's because you can't always 
# trust __STDC__ and those are the main things that we need)
#------------------------------------------------------------------------
AC_CHECKING(for ANSI-ish compiler)
: ${CC=cc}
AC_TRY_RUN([
typedef enum {FIRST, SECOND} enum_type;
void minc_test(void *ptr, enum_type enum_arg);
int main(int argc, char *argv[])
{
   enum_type enum_val;
   minc_test(0, enum_val);
   return 0;
}
void minc_test(void *ptr, enum_type enum_arg)
{
   return;
}
   ],:, [unset CC
        AC_PROG_CC
        if test -z "$GCC"
        then 
           AC_MSG_ERROR(Compiler is not ANSI C - try gcc)
        fi],:)

#------------------------------------------------------------------------
# Set up libraries
#------------------------------------------------------------------------
AC_CHECK_LIB(c, xdr_long,:,AC_CHECK_LIB(sun, xdr_long))
AC_CHECK_LIB(c_s, main)

#------------------------------------------------------------------------
# Look for netcdf header, etc
#------------------------------------------------------------------------
AC_CHECKING(for netcdf package)
ROOT=.
for testdir in '${ROOT}/..' /usr/local
do
   if test -z "$NETCDF_PREFIX"
   then
      thedir=`eval echo $testdir`
      if test -r "$thedir/include/netcdf.h"
      then
         NETCDF_PREFIX=`echo "$testdir" |sed -e s'/{/(/' -e s'/}/)/'`
      fi
   fi
done
if test -z "$NETCDF_PREFIX"
then
   AC_MSG_ERROR(Cannot find the netcdf package - define NETCDF_PREFIX)
fi
AC_SUBST(NETCDF_PREFIX)

#------------------------------------------------------------------------
# Check make variants
#------------------------------------------------------------------------
AC_CHECKING(make handling of targets in the dependency)
: ${TARGET_IN_DEPENDENCY='$$@'}
cat > conftest.Make <<EOF
conf-target :
	@true
conf : ${TARGET_IN_DEPENDENCY}-target
EOF
if $MAKE -f conftest.Make conf 2> /dev/null
then
   :
else
   TARGET_IN_DEPENDENCY='% : %'
cat > conftest.Make <<EOF
conf-target :
	@true
conf : ${TARGET_IN_DEPENDENCY}-target
EOF
   if $MAKE -f conftest.Make conf 2> /dev/null
   then
      :
   else
      AC_MSG_ERROR(Cannot get make to put the target in a dependency)
   fi
fi
AC_SUBST(TARGET_IN_DEPENDENCY)
rm -f conftest.Make

#------------------------------------------------------------------------
# Check os type (should match netcdf os type)
#------------------------------------------------------------------------
AC_CANONICAL_HOST
changequote(<<, >>)dnl
OS_TYPE=`echo $host_os | sed 's/^\([^0-9\]*\)[0-9].*$/\1/'`
changequote([, ])dnl
AC_SUBST(OS_TYPE)

AC_PREFIX_DEFAULT('$(ROOT)/..')

AC_OUTPUT(Make_machine_specific Make_configuration)
